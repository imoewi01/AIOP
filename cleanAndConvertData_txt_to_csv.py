
# good runs comes from RCDB query @is_dirc_production and @status_approved
good_runs =[73266,73263,73262,73261,73260,73231,73230,73229,73228,73227,73226,73225,73224,73223,73222,73220,73219,73218,73217,73215,73214,73213,73212,73211,73210,73209,73208,73207,73191,73190,73188,73187,73186,73185,73184,73183,73182,73180,73179,73178,73177,73176,73175,73174,73173,73172,73171,73169,73168,73167,73166,73165,73164,73163,73162,73161,73160,73151,73150,73149,73148,73147,73146,73145,73144,73143,73132,73131,73130,73129,73127,73126,73125,73124,73123,73122,73121,73120,73119,73118,73117,73116,73115,73112,73108,73104,73102,73099,73096,73095,73094,73093,73092,73090,73089,73088,73087,73086,73085,73083,73082,73081,73079,73078,73077,73076,73075,73074,73073,73072,73071,73070,73069,73068,73067,73066,73065,73064,73063,73062,73061,73060,73059,73058,73057,73056,73055,73054,73053,73052,73051,73050,73049,73048,73047,73045,73044,73043,73042,73041,73040,73039,73038,72948,72947,72946,72944,72930,72929,72928,72927,72926,72925,72924,72923,72922,72921,72920,72919,72917,72916,72912,72911,72910,72909,72897,72890,72889,72888,72887,72883,72882,72881,72880,72879,72878,72872,72871,72870,72869,72868,72867,72864,72863,72862,72861,72860,72859,72858,72857,72855,72854,72852,72851,72850,72849,72848,72847,72846,72845,72844,72843,72842,72841,72840,72838,72837,72836,72835,72834,72833,72832,72831,72830,72829,72828,72827,72826,72825,72824,72823,72822,72816,72815,72814,72813,72812,72811,72801,72800,72799,72798,72797,72796,72795,72794,72793,72792,72791,72790,72789,72788,72786,72785,72783,72782,72781,72780,72779,72778,72776,72775,72774,72773,72772,72771,72770,72768,72763,72762,72761,72760,72759,72757,72756,72754,72753,72752,72751,72750,72749,72748,72747,72746,72745,72744,72743,72742,72741,72740,72739,72738,72737,72736,72734,72733,72732,72731,72730,72729,72728,72726,72725,72723,72722,72721,72720,72719,72717,72715,72714,72713,72710,72708,72707,72705,72704,72703,72702,72695,72690,72689,72688,72686,72684,72680,72679,72678,72677,72676,72673,72672,72670,72669,72668,72667,72666,72665,72663,72662,72661,72659,72658,72657,72656,72655,72654,72653,72651,72650,72649,72646,72645,72435,72434,72431,72428,72427,72426,72424,72423,72422,72420,72419,72418,72416,72414,72413,72412,72411,72410,72409,72408,72407,72406,72405,72404,72403,72401,72399,72398,72396,72395,72394,72393,72392,72391,72390,72389,72388,72387,72386,72385,72383,72381,72380,72379,72378,72377,72376,72375,72374,72372,72371,72370,72369,72368,72367,72366,72365,72364,72363,72362,72303,72302,72301,72299,72298,72297,72296,72295,72294,72293,72285,72284,72283,72282,72281,72280,72274,72273,72272,72267,72266,72265,72264,72263,72262,72261,72260,72259,72258,72257,72256,72251,72250,72249,72248,72247,72246,72245,72243,72241,72239,72238,72197,72196,72195,72194,72193,72191,72190,72189,72188,72186,72185,72184,72182,72181,72180,72179,72178,72177,72176,72175,72173,72172,72169,72168,72167,72166,72165,72164,72162,72160,72159,72158,72157,72156,72155,72154,72151,72149,72148,72147,72146,72145,72144,72142,72141,72138,72137,72136,72135,72134,72133,72132,72131,72130,72129,72128,72127,72126,72125,72124,72122,72121,72120,72119,72118,72117,72116,72114,72112,72111,72110,72109,72108,72107,72106,72105,72103,72102,72101,72100,72099,72095,72094,72092,72091,72090,72089,72087,72086,72085,72084,72083,72082,72081,72080,72079,72078,72077,72076,72075,72074,72073,72071,72070,72068,72067,72066,72065,72064,72063,72062,72061,72060,72059,72058,72057,72056,72055,72053,72052,72050,72048,72047,72046,72045,72043,72042,72041,72040,72039,72038,72037,72036,72034,72033,72031,72019,72018,72017,72016,72014,72013,72012,72011,72010,72009,72008,72007,72005,72004,72003,71999,71994,71993,71992,71991,71990,71982,71981,71980,71979,71978,71977,71976,71973,71972,71971,71970,71969,71968,71953,71952,71951,71950,71949,71947,71946,71945,71944,71943,71942,71940,71939,71938,71937,71936,71935,71934,71933,71927,71926,71925,71924,71923,71922,71921,71920,71919,71918,71916,71913,71912,71911,71910,71909,71908,71907,71906,71905,71904,71899,71898,71897,71896,71895,71894,71892,71891,71890,71889,71888,71887,71886,71885,71884,71883,71882,71881,71880,71879,71878,71877,71876,71875,71873,71872,71871,71870,71869,71868,71867,71865,71864,71863,71855,71854,71853,71852,71851,71850,71849,71848,71847,71846,71842,71841,71840,71839,71838,71837,71836,71835,71834,71833,71832,71831,71830,71827,71826,71825,71824,71823,71822,71821,71820,71819,71817,71815,71814,71813,71810,71809,71808,71807,71806,71800,71795,71794,71793,71792,71791,71790,71789,71786,71785,71784,71783,71782,71781,71780,71778,71777,71776,71775,71774,71773,71772,71770,71769,71768,71767,71766,71765,71763,71762,71761,71760,71759,71758,71757,71755,71754,71753,71752,71751,71748,71747,71743,71742,71740,71739,71737,71736,71735,71734,71729,71728,71727,71725,71724,71722,71721,71719,71718,71717,71716,71715,71714,71705,71704,71703,71701,71700,71699,71698,71697,71696,71695,71694,71693,71692,71691,71690,71689,71687,71686,71685,71684,71683,71681,71680,71679,71678,71677,71676,71675,71674,71672,71670,71669,71668,71667,71666,71663,71662,71661,71658,71656,71655,71654,71653,71652,71649,71648,71647,71646,71645,71644,71643,71641,71640,71638,71637,71635,71632,71631,71630,71629,71628,71627,71626,71625,71623,71619,71618,71617,71615,71614,71612,71603,71598,71597,71596,71594,71593,71592,71591,71590,71589,71588,71587,71586,71585,71563,71562,71561,71560,71559,71558,71557,71556,71554,71553,71551,71550,71545,71544,71543,71540,71539,71538,71537,71536,71535,71530,71529,71528,71527,71526,71525,71524,71522,71521,71520,71519,71518,71517,71516,71515,71514,71512,71511,71510,71502,71501,71500,71498,71497,71494,71493,71492,71491,71490,71487,71486,71485,71484,71483,71482,71478,71477,71475,71474,71473,71472,71470,71469,71468,71467,71466,71465,71464,71463,71462,71432,71431,71430,71429,71428,71406,71405,71404,71402,71401,71400,71396,71395,71382,71378,71377,71375,71373,71372,71371,71370,71369,71368,71365,71364,71363,71362,71358,71356,71355,71354,71353,71352,71351,71350]

def clean_file(inputFilePath, ColumnName, outputFilePath, badValues=["<<","Network","disconnection",">>"]):

    print("starting file",inputFilePath)
    # need to replace things like
    # << Network disconnection >>,
    # with nan.
    # for run number, we may be able to use ccdb to recover some of the info.

    newFile = "Date-Time, "+ColumnName+"\n"

    with open(inputFilePath,"r") as file:

        line_list = file.readlines()

        for line in line_list:

            # element zero is date, 1 is time, 3 is column from EPICS (assuming no spaces)
            split_line = line.split()


            # catches "<< Network disconnection >>", and can add bad vals (ie like run number of 0)
            if split_line[2] in badValues:
                print(split_line)
                split_line[2] = "Undefined"
                continue # for now just skip if it is undefined or 0

            # convert split_line[0] and split_line[1] to a python datetime format for later
            # better to do later, so we can drop associated other variables too.
            # but need full history of goni motor movements..
            #if ColumnName=="RunNumber":
            #    if int(split_line[2]) not in good_runs:
            #        continue

            output_line = split_line[0]+"T"+split_line[1]+","+split_line[2]


            newFile += output_line+"\n"


    with open(outputFilePath,"w") as file:
        file.write(newFile)

    print("successfully wrote file",outputFilePath)


# takes the result of one myget command in a .txt file
# format Date-Time Column-Info
# and converted Date-Time to format that is python datetime friendly
# and cleans obvious bad values in Column
# then outputs as a csv file with two columns, datetime and column
# these will later be merged into a single csv
if __name__ == "__main__":


    clean_file("rawData/runConfigFiles_Spring2020/cbrem_plane.txt","CBREM:PLANE","csv_data/initial_converted/cbrem_plane.csv")
    clean_file("rawData/runConfigFiles_Spring2020/daq_status.txt","DAQ:STATUS","csv_data/initial_converted/daq_status.csv")
    clean_file("rawData/runConfigFiles_Spring2020/goni_pitch_rbv.txt","GONI:PITCH.RBV","csv_data/initial_converted/goni_pitch_rbv.csv")
    clean_file("rawData/runConfigFiles_Spring2020/goni_pitch.txt","GONI:PITCH","csv_data/initial_converted/goni_pitch.csv")
    clean_file("rawData/runConfigFiles_Spring2020/goni_roll_rbv.txt","GONI:ROLL.RBV","csv_data/initial_converted/goni_roll_rbv.csv")
    clean_file("rawData/runConfigFiles_Spring2020/goni_roll.txt","GONI:ROLL","csv_data/initial_converted/goni_roll.csv")
    clean_file("rawData/runConfigFiles_Spring2020/goni_x_rbv.txt","GONI:X.RBV","csv_data/initial_converted/goni_x_rbv.csv")
    clean_file("rawData/runConfigFiles_Spring2020/goni_x.txt","GONI:X","csv_data/initial_converted/goni_x.csv")
    clean_file("rawData/runConfigFiles_Spring2020/goni_y_rbv.txt","GONI:Y.RBV","csv_data/initial_converted/goni_y_rbv.csv")
    clean_file("rawData/runConfigFiles_Spring2020/goni_y.txt","GONI:Y","csv_data/initial_converted/goni_y.csv")
    clean_file("rawData/runConfigFiles_Spring2020/goni_yaw_rbv.txt","GONI:YAW.RBV","csv_data/initial_converted/goni_yaw_rbv.csv")
    clean_file("rawData/runConfigFiles_Spring2020/goni_yaw.txt","GONI:YAW","csv_data/initial_converted/goni_yaw.csv")
    clean_file("rawData/runConfigFiles_Spring2020/run_number.txt","RunNumber","csv_data/initial_converted/run_number.csv",["<<","0"])
